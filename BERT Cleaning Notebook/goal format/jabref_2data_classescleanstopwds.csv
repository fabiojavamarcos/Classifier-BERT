issueNumber,prNumber,Util,NLP,APM,Network,DB,Interpreter,Logging,i18n,DevOps,Logic,Test,Search,IO,UI,Parser,Security,App,corpus
3645.0,3665,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,migrate importer tests to junit5 in the course of we realized that our current (junit4) parameterized tests are not executed on the (junit5) travis build this is tracked here: #3645 i think this is a huge problem because we are missing out on a lot of validation here this pr is a migration of the paramterized ris tests from junit 4 to junit 5 id like to put this forward to discussion so that we can agree on how our parameterized junit 5 tests are to look like when we have agreed we can migrate all tests so please look at the code and write if you are happy with this[note that parameters cannot be resolved for lifecycle methods]( (`@beforeeach`) in junit 5 hence the structure in the pr----- change in changelogmd described- - ()- manually tested changed features in running jabref- ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez thanks a lot for the feedback! - regarding test arguments: i dont really see the point in splitting the single argument into two we have used the convention that the `bib` and `importerformat` files have the same name and why not keep leveraging that? also i find it better to do the path conversion in one place only but if we want to pass a stream of paths we always have to do that beforehand - regarding unification of importer tests: i have refactored around a little and arrived at a solution that should work for all importers i quite like how that condenses the `risimportertestfiles` classfun fact: i may have used junit 5 paramterization but so far the assertions were still junit 4 ill change that in the following || the importer tests where running for each file but that seems to have been ignored in the migration process by the junit 5 compi looked at this too but didnt find a way to get it to work again || yes indeed ill gradually go through all parameterized importer tests and try to get them working in junit 5 syntax again as part of this pr || turns out quite a lot of tests for different importers (bibtexml medline tested so far) actually fail and this is down to the implementations of the importers seems like these tests have never been executed beforei am not sure what to do about this here the point of this pr was a refactoring of the testing code not a repair of broken importers || i would merge this if all tests are at least executed or better you merge this in a new branch where we will fix the importer then || i converted and some fetcher tests in another pr i found that the gvk test would also be a goo candidate for using the same schema as here || i have now migrated the complete importer tests to junit5 syntaxsadly they are in a dire state a lot of them are actually failing and seemed to have never been executed anyway and even except from the refactorings that i have already done there as a lot of things that can still be improvedi think its best if we take the current (failing) state and try to repair each importer and its tests here in the pr this might be some work but the importer tests cannot really continue as broken as they are now help on this is very much appreciated and should be possible without conflicts || you can ignore the failing fetcher test this is already fixed but i wonder why there is now an npe with the method source || i should have more meetings so that i get more programming done :)i think i have repair all importers and their tests now ill see what travis says and ill also do one more round of refactoring on the code (not now) when i am done this can hopefully be lgtm! if you merge master in your branch you will get the fetcher test fixed as well || ok this can be merged from my point of viewalthough this is already a huge refactoring of the existing tests theres certainly more that can be improved i have a few things in mind but i would rather keep them out of this already big pr ill tackle them later when this is merged || that looks weird indeed looking at the first one: the `importdatabase` method is recorded as not covered but when i execute the tests in intellij there are twenty test files for that method alone the key seems to be that the missing methods are the ones that use junit5 parameterized tests it seems that codecov does not record the coverage of these tests but they are the core tests of the whole packagebut maybe the problem is still travis? how do i see from our travis output that the tests are really executed? i can push a failing test deliberately but there surely is a better way? || since the travis log contains statement like >13 57686 [main] warn orgjabreflogicmsbibmsbibdatabase - could not parse documenti suppose the tests are correctly invoked (in fact the travis log exploded even more) probably there is a problem with the gradle task `jacocojunit5testreport` (but there is no need to fix this in this pr) || i would merge this in and i think tthere might be a solution for the reports: ||
3648.0,3670,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,3648: chained modifiers work again -->3648 the problem was that `resultinglabel formatterget()format(label)` always used the original input and not the result of the previous modifier----- change in changelogmd described- - ()- manually tested changed features in running jabref- ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
364.0,3709,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,group separator escaping 3646
2617.0,3766,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,update architecture tests to catch static imports fixes a part of #2617updates the architecture tests to junit5 and also catches violations in static imports now i tested this by adding a static import and checking that the build breaks it does but of course i had to remove the cause again----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
3885.0,3887,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,improvements around external file types ( ( because github does not support autolinking there -->i tried to implement #3885 but changes of the file type in the linked file editor are not saved for some reason ill investigate this again after is mergedthus only some relative minor code improvements / fixes:- refactor external file type classes and extract a common `externalfiletype` interface- extract all built-in file types to separate enum (implementing `externalfiletype`)- fix display of external file type editor dialog (which is not shown in the current maintable-beta version)----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) since this pr is now ready for review over a month ill merge it despite not having any feedback so far ||
3929.0,3931,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,3929 correct fetcher messages 3929 @siedlerchr we do?! ||
3269.0,3954,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,add button-icon for union/intersection in the groups side panel 3269fix display of state for union/intersection in preferencesas we currently unfortunately dont have icons for set intersection/union `set-center` and `set-all` in the material design font i used the www and the twitter icon to demonstrate the purpose @halirutan will then try to integrate the correoct icons in jabref ( ( because github does not support autolinking there -->( change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez is this now okay? then you could merge it with co-authors || @tobiasdiez the issues you m entionend || i fixed the remaining issues and i am going to merge this one now ||
3860.0,3965,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,url column this 3860 url column now shows url or doi correctly and opens on click----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) hi @florian-beetz since you have been involved in the maintable migrations do you want to join tomorrows devcall at 11 am? drop me a note by mail (linus@lynyusde) cheers linus || okay merging this in order to move on i have created another issue to track the tooltips @florian-beetz wants to continue with that as the next pr? ( ||
3966.0,3968,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,fix ieee fetcher by enabling cookie support 3966 apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
3966.0,3970,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,fixieee 3966 followup from my previous prnow document links in the format ` are supported tooand i also tested the paper linked in the issue from university network that works fine too ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
3994.0,3996,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,3994 duplicate unmodifiable list for sorting 3994 ```runcommand error: nulljavalangunsupportedoperationexception at javautilcollections$unmodifiablelistsort(unknown source) at orgjabrefguiexporterexporttoclipboardactionrun(exporttoclipboardactionjava:59) at sunreflectnativemethodaccessorimplinvoke0(native method) at sunreflectnativemethodaccessorimplinvoke(unknown source) at sunreflectdelegatingmethodaccessorimplinvoke(unknown source) at javalangreflectmethodinvoke(unknown source) at spininvocationevaluate(invocationjava:175) at spinoffspinoffevaluator$1run(spinoffevaluatorjava:108) at javalangthreadrun(unknown source)```
3973.0,4011,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,reimplement tooltips for file and identifier columns this 3973reimplements tooltips for file- url-/doi- and eprint-column in the maintable-beta----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks again for your contribution! ||
4014.0,4016,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,do not trim or remove whitespace from the title based id fetcher 4014 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i now moved trimming down to the concrete fetcher classes and added tests ||
4070.0,4074,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0,0.0,1.0,mac graphics 4070 @linusdietz @halirutan can you also take a look as you own a mac please ðÿ˜„ should also be backported to v4x || @stefan-kolb i certainly can test something but what exactly should i look out for? with jabref open should my macbook use the integrated graphics-card or the fast one? or should i only test if jabref works? || it should use the integrated card || fyi: i just upgraded from jabref 42 to 431 i had to correct the plist again to have jabref use the integrated graphics card see [ so i guess that we are just waiting for your corrections to be it seems to work my *activity monitor* says that jabref does not require high-performance gpu is there anything else i should look out for? || i guess thats it @linusdietz || i guess that is the correct indicator i originally used gfxcardstatus to verify this but i now also compared both cases (old and new) with activity monitor and it is consistent> on 7 jun 2018 at 15:16 patrick scheibe wrote:> > it seems to work my activity monitor says that jabref does not require high-performance gpu is there anything else i should look out for?> > â€”> you are receiving this because you commented> reply to this email directly view it on github < or mute the thread < ||
4098.0,4100,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,migrate review field in entry preview to comment migrate review field in entry preview to commentreplace review with comment in every layout file4098 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added a test case || i would vote for merging this i refactored the tests and the migrations so that they no longer call globalsprefs _ more mocking is not really possible ||
3805.0,4137,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,3805: dash correctly terminates commands in layout files ( ( because github does not support autolinking there -->3805 now commands terminated by a hyphen (like `\edition-`) work correctlyway back in 2011 morten added the extra check for hyphens (commit 392bc7a6dd215eb23766378aa90e3995d0847bb7) however im not aware of any field that has a dash in it so im not sure what was the reason for the change (i couldnt find an old bug report)also refactored a bit the layout tests----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4126.0,4138,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,single line text fields solution for 4126]( ive used text formatter to force single line behavior hope its enough :) particular fields that should contain only one line are stored in immutable set// 7 tests have failed but they also had failed before on master:> mrdlibimportertest testimportdatabaseishtmlsetcorrectly()> mrdlibimportertest testimportdatabaseistitlesetcorrectly()> mrdlibimportertest testimportdatabaseisyearsetcorrectly()> xmputilreadertest testreadarticledublincorereadrawxmp> xmputilreadertest testreadarticledublincorereadxmp> xmputilwritertest testwritemultiplebibentries> xmputilwritertest testwritexmp cant we just change the underlying gui component from textarea to textfield?also please use plain java for making fields immutable or final not comgooglecommoncollectimmutableset if possible || @stefan-kolb how about now?ive added editortextfield class similar to editortextarea and extracted addtocontextmenu to interface (contextmenuaddable) also i had to change parameter type textarea to textinputcontrol in few places in order to use classes in generic way || that looks good so far for me! havent tested it yet but codewise it looks good (although the final in front of method parameter is suerpfllous || i use finals to avoid stupid bugs like reassigning variable with them my ide automatically underlines such stuff another thing is that ive decided to make code more readable so ive put new lines between simpleeditor constructor parameters (because there was one long line) and now codacy yells about that should i extract those parameters to another class like simpleeditorparameters or sth? || ping ðÿ˜„ ||
3062.0,4184,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,3062: ctrl + f selects search field again ( ( because github does not support autolinking there -->shortcut was simply not registered also remove a bit of legacy code which is no longer needed----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4201.0,4212,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,make attached files relative to the file directory 4201 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4202.0,4245,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix style issues in about dialog ( ( because github does not support autolinking there -->4202 and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states:( merge instead of squashing the commits----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgtm || i am merging this now ||
4233.0,4289,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix npe in merge entries dialog 4233fix fx thread errorconvert file to path ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) changed that ||
4305.0,4311,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix drag and drop in entry editor 43054087 (comment same issue described)consistent with preview panel behavior ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) as its a copy and paste of the method handling in the preview panel i merge this now ||
4266.0,4312,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,convert new entry dialog to javafx followup from #4266bibtex +custom ( + custom![grafik]( describe the changes you have made here: ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) adressed all comments the duplicate check is actually different handled and is slightly coupled to the import inspection dialog this is stuff for a new pr || i would like to merge this now if no further comments are added ||
3850.0,4327,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,save sort order column of main table 42243850i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit// i also an fx threading error when opening a new library (the snackbar output was not onfx thread)@tobiasdiez any idea if i did sth wrong oder have to set the value somewhere else? ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) sorry no idea would also need to debug this to see whats going on || hm this is odd i created a simple test application based on the code here i experience the same behaviour || apparently the sortorder alone was not sufficient: works now || i will try if i can store the sortorder as well || i now managed to save the whole sort oder for multiple columns ||
4224.0,4327,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,save sort order column of main table 42243850i tired to fix the above issue but i have the problem that the column sort listener is never fired when the sort order is descending edit// i also an fx threading error when opening a new library (the snackbar output was not onfx thread)@tobiasdiez any idea if i did sth wrong oder have to set the value somewhere else? ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) sorry no idea would also need to debug this to see whats going on || hm this is odd i created a simple test application based on the code here i experience the same behaviour || apparently the sortorder alone was not sufficient: works now || i will try if i can store the sortorder as well || i now managed to save the whole sort oder for multiple columns ||
4152.0,4337,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,fix export of corporate author to msoffice fix testsfix #4329 the underlying problem is the same as in #4152 however i came up with a workaround for msoffice 1 getting the original field2 check for corporate author (braces start and end)3 get latex free value4 readd braces for corporate 5 parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces ||
4329.0,4337,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,fix export of corporate author to msoffice fix testsfix #4329 the underlying problem is the same as in #4152 however i came up with a workaround for msoffice 1 getting the original field2 check for corporate author (braces start and end)3 get latex free value4 readd braces for corporate 5 parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces ||
4288.0,4355,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,auto trim url field ( ( because github does not support autolinking there -->fixes 4288]created a formatter to auto trim all kinds of whitespace defined by java----- change in changelogmd described- - manually tested changed features in running jabref- () _no need_- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
3781.0,4379,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,change latex command handling only for xml chars refs #3838 ----- change in changelogmd described- - manually tested changed features in running jabreftried to solve this issue in pr #4108this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to #3781 #3644? @bernhard-kleine: i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing[testbracesresultxmltxt]( will write tests based on your files if the export is now correct || thank you @johannes-manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title || this is a separate item from the docbook5 export #4319 where i am waiting for feedback || added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error || ping what is the status @johannes-manner? || oversee the comments and the ping sorry for that :) ||
4108.0,4379,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,change latex command handling only for xml chars refs #3838 ----- change in changelogmd described- - manually tested changed features in running jabreftried to solve this issue in pr #4108this approach is now more dedicated to the xml docbook export and not applied to all fields as the first pr wasi am also not sure if this issue is related to #3781 #3644? @bernhard-kleine: i exported your provided bib entry via docbooks exporter into xml please check the result and let us know if there is something missing[testbracesresultxmltxt]( will write tests based on your files if the export is now correct || thank you @johannes-manner this looks good to me for the testcase maybe we could skip those entries where there are no latex braces in the title || this is a separate item from the docbook5 export #4319 where i am waiting for feedback || added two test cases for (1) removed words based on an error during the latex command processing and for (2) unicode problems based on the same error || ping what is the status @johannes-manner? || oversee the comments and the ping sorry for that :) ||
4422.0,4426,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,fix arrayindexoutofboundsexception on second pdf import 4422 the variable formally known as i is a global variable which had -1 after the first run and therefore threw an exception ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added tests ||
3189.0,4470,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,3189 fix group renaming fix group renaming #3189 || please have a look at the failing tests and please test if the latex stuff is still transformed to unicode after rename || @ali96kz why did you close the pull request? you can simply push your changes to your branch and the pr is updated || @tobiasdiez could you review again? ||
4188.0,4498,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,improve page checker superseeds the pr #4188 and 4113 now page ranges like `r2-r5` are considered to be correct
4544.0,4547,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,do not extract file ending from urls 4544 do not extract file ending from urls should also 4480 please check @tobiasdiez i cannot access jstor stuff due to 403 however with any url and some appended key values like ?accetptrue it works for me again || please fix the checkstyle issue (import with * is not allowed) ||
3189.0,4549,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fixes that renaming a group did not change the group name in the interface 3189
2288.0,4565,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,add uncaught exception message added a simple dialog showing up if an uncaught exception was loggedadded the dialogs text to the german and english language filesfixes 2288]( change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you very much for your contribution ðÿ‘ we are looking forward seeing more from you ) ||
4600.0,4604,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,enable default cursor for new entry 4600sets text field on focus at the end of initialization by running the javafx thread----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4641.0,4644,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,fix for issue 4641: remove usage of tempdirectory extension from junit-pioneer fixes: #4641 removed the tempdirectory extension from junit-pioneer with the built-in extension of junit 54----- manually tested changed features in running jabref- (https://githubcom/joelparkerhenderson/git_commit_message) perfect thanks a lot! ||
4610.0,4660,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,4610 changed the way the groupdialog description is displayed fixes 4610]( changed groupdialog description node to textflow- groupdialog is no longer resizable- changed the layout of the groupdialog window to be more horizontal- ok button is only enabled after some input![jabrefgroupdialog2]( change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) > the code looks good to me and we can merge it as it is now nonetheless christoph is right and it would be better to replace the html completely by styled javafx text modules (with corresponding css style classes defined in the `basecss`) since this is a bit of work as you need to fumble around with the localization and its not utterly important i let you decide if you want to work on this or invest your time in something else (eg fixing another issue -) )i definetly agree that this should be done the right way at some point but im not really confident to touch the localization im going to move to another issue so this pr can be merged ðÿ˜„ || ah i think i just noticed a bug please wait with merging || could you please also take a look at #4678 || ok so i tried to automatically create a database when the user tried to create a new group without a open database but i couldnt get it to run the code to add the group to the open database always ran before the new database was createdin the end i gave up and i just created a warning when the user tries to create a group without a database i hope i made no mistakes while adding the localization> could you please also take a look at #4678this error never occurred when i tried it the report is a little thin and i couldnt recreate itif everything looks good to you you can merge this pr || thanks for the quick follow-up (and sorry for being somewhat pedantic -) ) ||
4614.0,4696,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,remove resolve duplicate keys dialog ( ( because github does not support autolinking there -->4614removes the resolve duplicate keys dialog this feature is made obsolete by the integrity check and the user can generate new keys very simply (for all entries or only for the duplicated ones) through the entry editor and/or menu----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) well however on import there should be a warning and the option to resolve duplicate keys its essential to discover duplicates || @siedlerchr such a feature wasnt implemented (the only check was when opening a database) and is obsolete with my other pr #4692 where now keys are automatically generated for every imported entry duplicate entries are also highlighted in the import dialog || okay then i see no problem! ||
4728.0,4729,1.0,0.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,saving changes and exiting application 4728when the user clicks _save changes_ option the status ofsaving is not shown unlike before i am not sure what might bethe cause of that ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) the `teardownjabref(filenames)` executes before the files are actually saved would this be responsible for the ui not being shown? || i dont have the code at hands but this could be a reason you could debug and see where the save happens and when the instance should be closed || okay so this is what i think is happeningthe savedatabaseaction class [dosave()]( updates ui on _javafxthread_ however the call to `teardownjabrefframe` executes before that and a blank window is shown instead of the uii placed a lock before calling [teardownjabrefframe]( hence blocking that thread but the code under [dosave()]( method wasnt executed shouldnt they be running on separate threads? || ill take a look at it tomorrowyash kothari schrieb am mi 6 mã¤rz 2019 19 > okay so this is what i think is happening>> the savedatabaseaction class dosave()> executes before that and a blank window is shown instead of the ui>> i placed a lock before calling teardownjabrefframe> > â€”> you are receiving this because you commented> reply to this email directly view it on github> the thread> || i have a doubt since the `dosave()` method handles `saveexception` what exceptions are we trying to catch under `confirmclose()`? || please remove the runinjavafxthread call only when the dosave is called from gui methods it might that the dosave could be called from a background thread which will result in a not on fx thread exception || will adding a new method `savefromgui()` in `savedatabaseaction` be a good approach to solving this problem? this i think will lead to some redundant code or will require refactoring of the `save` method ||
4724.0,4731,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,fix default import format pattern remove display arrayadd migration4724 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4474.0,4738,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,adding support for input methods 4474 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thank you! i am enjoying the process so far ||
4460.0,4760,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,improve remote messaging 4023 (multiple instances possible) and should 4481 by reducing the timeout (thus jabref does no longer waits seconds if a proxy prevents us from connecting to localhast) surpasses #4460 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) does not work: still possible to start a second instance from within eclipse```20 59400 [javafx application thread] debug orgjabreflogicremoteclientremoteclient - could not ping server at port 6050 - javanetsockettimeoutexception: connect timed out at javanetdualstackplainsocketimplwaitforconnect(native method) at javanetdualstackplainsocketimplsocketconnect(dualstackplainsocketimpljava:85) at javanetabstractplainsocketimpldoconnect(abstractplainsocketimpljava:350) at javanetabstractplainsocketimplconnecttoaddress(abstractplainsocketimpljava:206) ``` || this sounds like the first instance failed to respond did you made sure that both instances run from the new code? do you get an error message in the first instance? || yes i started both instances in eclipse waited until the first instance finished starting i only passed the debug parameter as command line argument the logged error is from the first instance at startup same happens when the second instance is starting the second instance starts normally no other errors || tested again today seems to work now ||
4755.0,4761,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,enable import button only if entry selected ( ( because github does not support autolinking there -->fixes 4755]( change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4754.0,4779,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,fix illegalargumentexception when ranking entries add names for ranking entries event so it does not generate an illegalargumentexceptionthis pr 4754 ----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4785.0,4791,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix npe in duplicate resolver dialog 4785init method was accessing the database field before it was initializedfixes #4786pass a new bibdatabsecontext() ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) as this are very simple fixes i merge directly) ||
4817.0,4818,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,put renaming of file entries in javafx thread for cleanup closes #4817 because field changes must be done in the javafx thread i put the field change in a callable to be executed by the javafx threadthis issue might arise for other cleanup tasks as well----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your pullrequest! || @tobiasdiez im sorry i was a bit careless with this pull request and used a class from the `gui` inside the `logic` package and now the build fails shall i open another pull request to revert this or can you fix this on the master branch? ||
4819.0,4822,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,convert autolinkfilesaction to javafx 4819also convert a few other message boxes to javafx ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) lgt build failing is due to previous problematic pr with cleanup ||
4735.0,4839,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,fix parser exception when loading tex-groups with non-existing file 4735 catch file not found exception and handle non existing aux files gracefully ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4840.0,4847,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,removed default constructor of fxdialogservice fix for #4840 needs test and discussion~~removed injection mechanism for dialogservice in order to remove its default constructor because through the null value used in the default constructor the nullpointerexceptions were caused~~----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
3905.0,4860,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,remove deprecated awt apple extension 3905 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @linusdietz @halirutan could you please test if this removal breaks anything related to mac? the only thing from the code might be the file handling eg double? click on a bib file in the finder || tested it for a day no issues appeared ||
4873.0,4876,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,fix saving of strings fix removing of strings4873the only problem i now have i cant reliable detect/prevent dupliacte stringseg a user can have a string with label a and content b and a user can enter a new string a with content cthe first string would now be overwritten@tobiasdiez do you have an idea if we can directly prevent the entering of duplicates?the addall method simply adds all strings and updates the content if found previously it would always report a duplicate label exceptionmaybe one could check the id value if its present or equals ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks now its functional ||
4932.0,4935,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,throw bibentrynotfound exception in case entry is no longer present 4932 when an entry got removed a npe complaining about an empty database was thrown because of some weird unkownbibtexentry thingnow the correct bibentrynotfound exception is thrown showing the problematic reference mark ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4940.0,4943,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix threading issue with opening from recent libraries 4940on windows 10 i could not reproduce the original exception but im very convinced that i found the threading culprit ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4886.0,4964,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,remove ui threadlist for maintable as it prevents sorting in maintable 4886renenables sortingtried a bit around and could not find any side issue so far ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) added it around the original getentries that works now as well || jabref 50-dev--snapshot--2019-05-11--master--3baa6bd22linux 4180-18-generic amd64 java 180_191yes seems to work fine its a little slow perhaps? jabref seems to need a up to 7 seconds to sort a newly-selected date/year column (thinkpad t560 with i5 core cpu bib database with 4000+ entries) and a few seconds after a sort to start receiving keystrokes again alphabetic field columns sort more quicklythanks!dominik || @tobiasdiez i didnt encounter any problems with the cleanup maybe we can remove the wrapper? seems to cost performance ||
4997.0,4999,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix iee fetcher 4997 add exception dialog on import failcheck if we have keywords field present in json ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5043.0,5048,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,preserve encoding while copy and pasting in maintable 5043encodes and decodes data with utf-8 merging this now! ||
5045.0,5086,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,bugfix/5045 : modified the existing logic to comply crossref resolution with biblatex specification 5045 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks for your contribution could you please add a test for the changed code? || @tobiasdiez @siedlerchr sure ill make those amendments and the uts || @tobiasdiez could you please review the latest commit thanks :) || > looks good to me now> please merge the latest master changes in there have been renaming of the fields classes so you need to fix this then we can merge@siedlerchr i pulled the changes from master this pr can be merged to the master now > please review the imports and organized imports please review and merge || > > > > please review the imports> > fixed and organized imports please review and mergeplease have a look at travis checkstyle output star imports are not allowedif you use intellij you can directly import the code style from the config folderfor eclipse you can run /gradlew eclipse to automatically import the correct code styleif you then run organize imports in the ide it will be correct || > > > please review the imports> > > > > > fixed and organized imports please review and merge> > please have a look at travis checkstyle output star imports are not allowed> if you use intellij you can directly import the code style from the config folder> for eclipse you can run /gradlew eclipse to automatically import the correct code style> > if you then run organize imports in the ide it will be correctfixed imports issue please review ||
5002.0,5123,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,add search for citations in latex files (back-end and gui) here is a **latex parser tool** that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will **ask the user for a directory** to search tex files then the user could **select specific files** after that the tool parses these files and **shows all the bibliographic entries found** in a new dialog box![latex_parser]( issue: 5002]( change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot! ||
5194.0,5195,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,add citation commands to texparser we added a few more citation commands: `autocite` `autocite` `blockcquote` and `textcquote`this pr 5194----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5125.0,5196,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,implement ottobib fetcher fetcher does not return bibtex data in plain text instead its part of an html text areafix isbn testsupdate user agentfollow up from #5125----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5198.0,5201,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix exception when adding new entry 5198 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4836.0,5210,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix double paste on different os 4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste working in linux as well! ||
4845.0,5210,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix double paste on different os 4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste working in linux as well! ||
5220.0,5224,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix exception when adding field formatter in cleanup entries dialog this 5220
5277.0,5265,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,conversion of preferences / xmp and nameformatters to mvvm follow up to #5033 quick and easy same issue with combobox as in #5185 filed bug report in #5277 ![xmp]( be ready to review ----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) im going to have to resolve some merge-conflicts after merging #5185 || > as usual a big thanks for your work! again as usual the code looks really good a few minor suggestions and then we can merge from my point of view>> (will review your other pr as soon as possible have a bit much to do at the moment sorry)as usual: there is no hurry! really im just coding this in my not so free time to distract me from my real work with my thesis this is just to have some fun and to remind me of the days i studied informatik in 2004 || sorry for asking: but why do i receive e-mail notifications about this pr here? i am not subscribed to it || @codeberg-asgithubalternative-buhtz you may have accidentally subsribed or comemnted earlier on this pr? or you are watching the repo at the top right side next to an issue or pr you can unsubscribe ||
522.0,5266,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,issue #5223 issue #5223 add @software and @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype]( change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) looks good so far please add a changelog entryregarding the fields: you can look up in the biblatex documentation: 211: the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes #xxxx or xxx then the issue will be automatically closed when the pr is which biblatex styles support `@dataset`? || biblatex-bath does ( ||
5223.0,5266,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,issue #5223 issue #5223 add @software and @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype]( change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) looks good so far please add a changelog entryregarding the fields: you can look up in the biblatex documentation: 211: the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes #xxxx or xxx then the issue will be automatically closed when the pr is which biblatex styles support `@dataset`? || biblatex-bath does ( ||
5045.0,5282,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,fix/field inheritance this implements the complex biblatex rule set to solve the crossref inheritance issue #5045 ----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) thanks a lot for your contribution! codewise looks in general good to me it would be nice if you could incoropate some more tests you can make a parameterized test then maybe || @siedlerchr @tobiasdiez i reworked and extended the tests according to your suggestions thanks for your valuable feedback ||
4958.0,5289,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,wrapper classes for ui lists etc that ensure updates on javafx thread fixes 5108]( fixes [#5109 ]( the threading issue part of #4958 is by using `uithreadstringproperty`new classes are added to `guiutiluithreadaware` which enable a wrapper class around `observablelist` which ensures that changes are propagated on the javafx application threadi started with `uithreadlistdecorator` but others like `uithreadmapdecorator` could be implemented similarly----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) ok it took me while to reproduce #4958 reliably but now i added a `uithreadstringproperty` in `personseditor` which wraps the original property and the issue should be now@tobiasdiez should we use as few as possible new ui thread aware classes only where necessary or should i add it consistently to classes in `guifieldeditors` ? || thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side? || > > > thanks! i think it is fine if we add the wrappers only when they are really necessary so this pr is ready from your side?alright not quite i want have another look at it and also add some comments to the new classes || ok from my side this would be ready to merge@tobiasdiez thanks for the help and feedback for this! || i guess #5010 is obsolete now? ||
3142.0,5325,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,use binding to update global state manager ( ( because github does not support autolinking there -->use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular 3142 and fixes #4441moreover i an error that was thrown when interacting with the toolbar (missing open statement but we were using reflection)----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4846.0,5326,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix problem with search and switching between libraries 4846 by using bindings instead of listeners ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
2857.0,5328,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,improve group coloring and item count 5327 the problem was that `gettreetablerowgetitem()` in `viewmodeltreetablecellfactory` still returned the old item (and not the new one passed as method argument to `updateitem`) since i was already looking at the code this pr also fixes #3112 that improves the coloring after an entry was added to the group also fixes #2857 (at least i couldnt replicate it anymore) ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5348.0,5351,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix exception when closing jabref 5348 by using javafx windows instead of awt windows ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
2902.0,5352,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,bring back the context menu as explained in it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround 5254 and refs i removed the custom tab handling because it is now working as expected (ie #2902 is in java 9+) ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5022.0,5354,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,fix group color when scrolling 5022 problem was that the pseudo-class was not initialized correctly but was only triggered upon changes ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5369.0,5382,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix for #5369 - fallback to 0 in case stored preview cycle pos does no longer exist fix for #5369problem should in theory not happen as always a correct size should be stored - however if for example csl styles are not loaded properly the mentioned exception in #5369 might occurto prevent this upon creating the preview prefs now the stored cycle position is now compared to the actual list of previews before being set ( ( because github does not support autolinking there -->----- change in changelogmd described - i think as this is not a common problem can be omitted?- ~~ ~~- manually tested changed features in running jabref- ~~ ()~~- ( ~~ ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~
5246.0,5385,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,reenable prevcycle ( ( because github does not support autolinking there -->okay this should be working again now however without the csl styles working (see #5246) its a bit hard to check -) fixes change in changelogmd described- ~~ ~~- manually tested changed features in running jabref- ~~ ()~~- ( ~~ ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)~~
5169.0,5395,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,fix exception when merging entries the problem was that `sourcechanged` was invoked asynchronous and thus the information in the change event could be obsolete if another thread changed the underlying list in the meantime solution: run `sourcechanged` on the javafx thread but synchronously5169 ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) i merged to keep things moving however it would be nice if my code questions would lead no another pr adding comments on the code ||
5383.0,5421,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,add change listener to main table to scroll to imported entry add change listener to main table to scroll to imported entry #5383----- change in changelogmd described- --> not really testable via unit tests- manually tested changed features in running jabref- () --> not needed- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) please re-review || @siedlerchr what do you think? || loos good to me now as well! thanks for your contribution ||
5084.0,5432,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix cursor jump 5084 the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like #5084 where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are now ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) when you create a new entry the focus should be in the first field does this still hold true? || @siedlerchr thats a good suggestion but does not even work in the current master something for another pr maybe ||
5244.0,5451,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,add option to display entry preview as tab in entry editor adds the entry preview as a tab 5244 also fixes #5446 plus a bit of refactoring( describe the changes you have made here: ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5035.0,5454,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix highlight issues for lists 5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones) ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5277.0,5454,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix highlight issues for lists 5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones) ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5069.0,5472,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix highlight problem in entry preview 5069 by using markjs ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
5463.0,5481,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix for issue 5463 issue #5463 ( - change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) good work ðÿ‘ ill merge this pr nowi hope you enjoyed contributing to jabref i would like to continue working with you what do you think about resolving this issue was recently reported and is about an important feature of jabref ||
5469.0,5483,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix not on fx thread error for custom entry types 5469 revert change done in #5423 because the actual code just opens the already loaded databasesat this point the databases are already loaded in a background thread ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4949.0,5501,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,new ads fetcher i added a new fetcher that uses the new ads api some open question for implementation:* which ids should be viable ids for idbasedfetchers? only doi? only ads bibcode? the current/old version can handle both but im not sure if this is intentional * we need an api key to access the api i have one for development but someone has to create one for the project * we need to set a limit on how much search results are shown is 20 a good value?refs #4949 ----- change in changelogmd described- - cleanups tasks (change comments and documentation)- manually tested changed features in running jabref- ( add api key that looks already really good nice job! - if it is (relatively) easy to implement then doi + bibcode support would be nice- i will request an official key- 20 entries sounds indeed gooddo you have any questions codewise at the moment or anything else where we can help? || > if it is (relatively) easy to implement then doi + bibcode support would be nicethat is no problem i already have implemented this> do you have any questions codewise at the moment or anything else where we can help?at the moment i dont have any questions but i would like to get as much feedback as possible || right now i have implemented the fetcher in a new class should we keep the old one and remove it later? || you can delete/replace the old fetcher there is no point in having two fetcher for the same online service || great thanks! any plans / chances that the new fetcher will be back ported to the latest stable release (43) !? ||
5449.0,5519,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,fix xmp null error 5449 was caused by wrapping a set of fields in a treeset without specifying the comparator ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?)
4430.0,5539,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,improve performance improve performance by:- caching fields as keywordlist- remove duplicate change listener- remove preference access in loopwith these changes the mega huge library of @aegit works without too much delays (the initial loading of the database is a bit slow but still ok) thus this pr is a potential fix for #4430 and for describe the changes you have made here: ( ( because github does not support autolinking there -->----- change in changelogmd described- - manually tested changed features in running jabref- ()- ( ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?) @tobiasdiez wonderful! let me know when i can start testing this fix ||
5661.0,5670,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,improve column preference migration #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there-->5661 - change in changelogmd described (if applicable)- - - ()- [](
5679.0,5680,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,add throttle to autosaveuimanager as discussed in #5679 there are a lot of save actions performed when autosave is turned on this pr adds a timer which limits the save actions to one in 200ms which is especially handy when automated tasks like find and replace are performed- change in changelogmd described (if applicable)- when working on this the comments on should be checked ðÿ˜‡ || i found the scheduledservice from javafx mabye this is an option as well? || @koppor by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progressthis leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?as i can see there are two `savedatabaseaction` created: one in the `basepanel` and one in the `autosavemanager` no locking is happening so basically the later manual saved version could be overwritten by the older autosave one? || @siedlerchr i think this is more for recurring tasks rather to simply defer a task as it says that it will go from scheduled -> running -> finished -> scheduled automatically || actually @siedlerchr you were right! there is a `scheduledthreadpoolexecutor` i now completely changed the way to tackle the problem `autosavemanager` had a normal `executorservice` there was actually a bug when saving took longer `executorservice` would through an exception as the pool size was only of the size one under certain circumstances newer information might not get auto-saved thereforethe current implementation replaces the `executorservice` by an `scheduledexecutorservice`additionally the bug of #4877 can now be reproduced when autosave is enabled change something and quickly press ctrl-s -> you will see the error so we should make the savedatabaseaction thread safe to prevent the error@koppor what do you think? || ah cool that sounds good thread safe sounds fittingthere are different ways to achieve this and maybe one of those newer locking things is helping || @ka0o0 do you use eclipse or intellij? with intellij (and the complete setup from the autoformat takes care> by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progress this leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?(unsure whether this is still the question) - either cancel the current autosave or let it go and then trigger it again i would prefer the former (as long as we write to `sav` and then move to `bib` - thus we do not destroy the `bib` file of the user) || @koppor actually i have important that already but i forgot to do auto formatting before committing ive now created a pre-commit hook which runs checkstyle so that this doesnt happens again || thanks again! ||
4224.0,5730,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,persistent column sortorder this pr should make the column sort order persistent @siedlerchr [asked me]( to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion ðÿ˜ maybe someone else likes to test it?4800 fixes #4224refs #5713 and #5368follow-up to #4327 and #5544the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here- change in changelogmd described (if applicable)- - - ()- []( i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending || thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it again?a shortcut for quicker testing: after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog || yes works fine after resetting the preferences ðÿ‘ codewise also looks good i let have @tobiasdiez the final say on this ) || great did you notice any performance drops? || so far not sorting alone in a huge database with over 6400 entries and many groups takes a long time so this is definitely not related to the storage of the order || i am so free to merge this ) ||
5713.0,5730,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,persistent column sortorder this pr should make the column sort order persistent @siedlerchr [asked me]( to give it a shot and to see if its somehow quicker i tried to stay close to the javafx implementation of the the column sort order and somewhat close to the mvvm pattern i dont think it has much impact on the performance compared to the current master but im not equipped with a profiler to test it so its just my subjective opinion ðÿ˜ maybe someone else likes to test it?4800 fixes #4224refs #5713 and #5368follow-up to #4327 and #5544the next step would be to implement sortorder by library which would allow some more exotic use cases for jabref i remember someone had problems with the sort order when using jabref as a library for some genetics stuff but i wasnt able to find it in the issuesso lets talk about thisscreenshot is omitted as there is nothing to see here- change in changelogmd described (if applicable)- - - ()- []( i tried your branch and for me it doesnt work i changed sort order for year to descending but after a restart its still ascending || thats somehow odd just tried it again and it worked for mecan you try to reset the preferences restart jabref and test it again?a shortcut for quicker testing: after restarting jabref the mechanics of column sorting should be also the same in restarting jabref as in opening and saving the prefs dialog || yes works fine after resetting the preferences ðÿ‘ codewise also looks good i let have @tobiasdiez the final say on this ) || great did you notice any performance drops? || so far not sorting alone in a huge database with over 6400 entries and many groups takes a long time so this is definitely not related to the storage of the order || i am so free to merge this ) ||
2868.0,5731,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,2868 - keep source groups selected after drag and drop this pr fixes a bug where the selection of the source groups was lost after drag and drop (#2868) i noticed a bug in the mapping from `groupnodeviewmodel` to the corresponding `treeitem`the bug might also have caused other selection related bugs- change in changelogmd described (if applicable)- thanks again for the contribution! || very welcome guys :) happy to be able to support you ||
5820.0,5823,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,fix for multiple error messages in messed up source editor 5820jabref created a new instance of codearea everytime an entry was selected and bound multiple listeners to the codearea and to the validationstatus in bindtoentry refactored it a little bit so the codearea stays persistent and the error messages are only displayed oncedid some minor refactorings to the other validators and to modulesinfo too to avoid warning messages from the ide and a minor mistake from a previous pr in darkcss no screenshot as there is no visual change- change in changelogmd described (if applicable)- - - ()- []( thanks for the fix i dont know exactly what but i remember we had issues with the code area when going up and down in the main table with an open entry editor and also when importing? i know that there was a reason why it was created new every time maybe @tobiasdiez remembers || this should do the trick now apparently javafx fires the focus event after loading the next entry and registering a listener does not mean it is also runwhat i dont understand is the failing gui test it fails somehow during setting the test up trying to call getsourcestring with an empty bibentryit does not fail with a real entry open in jabref but only with the test should i modify the test? || the new fix looks good to!i guess the test fails as `currententry` is null in can change to `notifyaboutfocus` ||
5816.0,5841,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix missing file extension for downloaded files 5816 by falling back to pdf as default file type #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there--> - change in changelogmd described (if applicable)- - - ()- [](
5862.0,5868,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,5862 it was indeed the throttler (at least it is working now for me) #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there--> - change in changelogmd described (if applicable)- - - ()- [](
5939.0,5940,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,5939 by creating a mutable list in opendatabaseaction this pr fixes the problem when opening a library from the recent libraries menu 5939 - change in changelogmd described (if applicable)- thanks again for your contribution! we tried it locally did not fix the issue we will switch to `listof()` ||
5968.0,5983,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,loosing group if the most bottom one in list is dragged on itself 5968 - change in changelogmd described (if applicable)- - - ()- [](
6015.0,6018,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,add shortscience integration #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there-->this pr introduces a simple integration towards shortscience as tracked by #6015 the integration is in the form of an additional context menu item called *search shortscience* which if clicked will open the users web browser to the search results for the selected entrys titlei experimented with generating a direct link to the shortscience page for the article instead of linking to the search results but the uri scheme is not entirely consistent nor predictable at shortscience so it was deemed more effort than it was worth - change in changelogmd described (if applicable)- - - ()- []( hi @stevensdavid thank you for your work and your pr you are right baseaction is deprecated and i already prepared a pr to completly remove the deprecated baseaction stuff from the rightclickmenu> the future way to implement menu actions is to put the action information in standardactions and to implement the action as a class extending simplecommand should be very straight forward for some hints please have a look at my pr #5958 if you have questions just ask me im happy to help youhey @calixtus! it seems i need a few of the changes in api that you implemented in order to use the new style making it difficult to port the feature to the new style before your pr is merged specifically id need the new signature for `rightclickmenucreate` that you implemented in d1d74c7d4d12c81b1b324fc4f973f2f437b2bb83 as it includes the statemanager and the actionhelper methods you introduced in f664d10470572e00e1f5c91bbc3eec83853abb92 these commits dont seem particularly easy to cherry-pick without getting your other refactoring work and im not entirely sure if it is considered good practice to cherry-pick partial commits as i havent done that before ðÿ˜… || yes maybe its better to wait until after the release of 50 its better not to introduce new features right now but to stabilize the current branch so we can release in some days and to put this feature into 51 || @stevensdavid you can base at @calixtuss branch if that works out or just merge his branch into your branch || i ended up merging @calixtuss branch into this one so the diff looks larger than it actually is as such this shouldnt be merged before #5958the code has been rewritten to use the new style and i have broken out the link generation into a separate method which now has a few test cases should the documentation and changelog be updated as part of this?edit: code style errors seem to be inherited from the merge and are not from new changes || i changed the base branch to `replace_deprecated` to enable reviewing the diff to explanation: i mirrored the current state of into the branch `replace_deprecated` by locally cloning @calixtuss fork (`git remote add calixtus ` `git fetch calixtus`) checking out the branch and pushing it to here (`origin`) || @koppor thank you for the feedback! ive pushed new commits that should resolve your comments ||
6078.0,6121,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,icons from material design icons not recognized 6078related #5245@jabref/developers 2b760cddf53cceae54fd149774226461f5290daa caused this issue only icons contained inside jabreficons are available nowthe question is - do we really want this feature? not sure if changing the line back to ``` return enumsgetifpresent(materialdesigniconclass iconcodetouppercase(localeenglish)) tojavautil() map(icon -> new internalmaterialdesignicon(getcolor() icon))``` will reintroduce the referenced issue ( feature also only makes sense if we have a dropdown with all available icons inside the new/edit group dialog imho(https://user-imagesentcom/2141507/76682572-845c6380-65fd-11ea-9384-8b105d66bd76png) merging 6121 <
6026.0,6143,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,add aps fetcher (refactored) 818 part of #2581 follow up from #6026 #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there--> - change in changelogmd described (if applicable)- - - ()- []( failing test is not relevant i merge now ||
818.0,6143,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,add aps fetcher (refactored) 818 part of #2581 follow up from #6026 #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there--> - change in changelogmd described (if applicable)- - - ()- []( failing test is not relevant i merge now ||
620.0,6240,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,add simple unit tests for #6207 i have split some unit tests into different methods with only one assert statement@koppor please let me know what you think about my additions so far!- change in changelogmd described (if applicable)- - - ()- []( i would split it even further create a separate class for each integritychecktest (eg one class for edition one for author ) as we also have a different class for each integrity check || hi @dimitra-karadima thanks for you effort writing unit tests is sometimes boring but can also be very educational thank you very muchalso i wanted to ask you to keep the checkboxes in the pr description as they are always useful to us to get a quick overview to which extent a pr is done even if only one checkbox makes sense in a pri took the liberty to readd them by myself || > > > hi @dimitra-karadima thanks for you effort writing unit tests is sometimes boring but can also be very educational thank you very much> also i wanted to ask you to keep the checkboxes in the pr description as they are always useful to us to get a quick overview to which extent a pr is done even if only one checkbox makes sense in a pr> i took the liberty to readd them by myselfthanks for your input! i will keep it in mind for the upcoming prs! || @dimitra-karadima did you already found the time to address the comments above? || > > > @dimitra-karadima did you already found the time to address the comments above?@tobiasdiez sorry i was a little bit busy but until sunday i will commit my new changes! || > > > @dimitra-karadima did you already found the time to address the comments above?@tobiasdiez what do you think about my latest commit? || looks got o me please resolve the conflicts at `integritychecktestjava` || > > > looks got o me please resolve the conflicts at `integritychecktestjava`@koppor i it! || @dimitra-karadima thank you for continuing to work on it it would be very nice if you looked at our automated tests the **checkstyle** is failing:( can avoid the unused imports if you *format* the file please ensure that you have the jabref code style active in intellij see for details || had to retrigger the build workflows as they were not executed correctly checkstyle still fails:![grafik]( you can execute the checkstyle checks locally either in the ide or using `gradlew checkstylemain` || thank you for the follow up - i merged it as a single commit into a local branch in this repository i will address the minor comments for myself there ||
5740.0,6248,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,number of items found in importentriesdialog this pr finishes the abandoned pr from cloudfenrir (closes #5740)( change in changelogmd described (if applicable)- - - ()- [](
5737.0,6287,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,ui consistency - bibtexstringeditordialog rework follow up to #5737 took me only about four and a half months to figure that out thanks @tobiasdiez ðÿ˜œ : nodelookup did not work as the textfield node was not present at the time a edit cell was createdgood news is: i found a way to bypass the restrictions of the private textfield variable bad news is its a bit of a hack but hopefully somewhat leightweight~also changes in tables should now be commited if the focus is lost~ temporarily removed again since there are deeper issues with the cellfactoryim still working on some minor issues especially the validation in tablecells is completly dysfunctional( change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository finally most of the dialog works but i had several problems with listening to the focus lost eventthis revealed some deeper issue with the cellfactory i have been investigating the last few daysthere was a very strange issue with the cells: editing worked only on the first item and on the fifth and so on in case a listener is registered with the tablecell at first i was not able to understand the issue so i decided to work on the validation in the meantime since the controlsfx-validation decoration did not work too (the icon was b/w and hidden behind the border of the cell i chose to highlight the whole cell instead by a pseudo class as we did in #6151) this led me finally to understand the direction where the issue with the first and the fifth row came from probably jabref is reusing nodes again to create tablerows a picture is better than a thousand words:( seems to be something wrong with the cellfactory i tried to understand the issue but had no success yet so i could use some advise maybe @tobiasdiez can help me here since he was able to solve a similar problem with the listcellfactory in #5454 (i tried his solution here did i do something wrong?) || this should now be somewhat ready for reviewthis should already an improvement to the earlier version of this dialog auto edit works etc but due to a bug in javafx commit on focus lost is not working a workaround i tried produces only more problems this seems to be a known issue but there is no progress in fixing it since 2017 ( )so ill leave it at this point i believe the dialog is better then before although it is not perfect ||
6237.0,6289,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,fix xmpexportertest hotfix for xmpexportertest not workingas soon as pr goes through i will mergefollow up on code-quality will be done at #6237the issue was introduced during removing of `@deprected` method in #6283
5522.0,6368,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,fix various dark theme issues related issues: #5522 #5699 - dragndrop text( dialogs![image]( issue is that i dont find the dialogs graphics (eg the confirmation image) adequate so maybe create custom ones for the dark theme (or remove them)?- scroll panethe scroll pane is quite visible (at least on my side) so i dont know if that issue has been considered as resolved or not?![image]( change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository changes regarding the scroll bar:( hover:![image]( || perfect thank you again! ||
6370.0,6371,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,disable the generate button if the id field is empty 6370 - change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository thanks looks good to me!ps: if you write `12345` in the body (fixes followed by issue nunber without the code tags) github will close the issue automatically on merge || thanks again for your contribution! ||
6091.0,6379,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,fix library sort order get lost this pr 6091co-authored-by: heriniaina randrianasolo co-authored-by: omar tachour co-authored-by: sadji micipsa this error is due to the absence of an object equality test for the saveinspecifiedorder attribute so we have handled this error by correcting the equals function in the saveorderconfig class - change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository your changes look good to me but im currently trying to understand why this fixes the error could you please explain that in a bit more detail? || @hrandrianasolo i tested your changes and they dont seem to make a difference so could you please explain it || hi @siedlerchrwe apologize for the delay i am the colleague of @hrandrianasolo the bug correction works very well on a version which is not up to datewe have well compiled and executed the modified code and we found that the bug is corrected there i am trying to test it on the new versionregarding the explanation the configuration of the export sort order is represented by the class saveorderconfig in librarypropertiesdialogview there are two objects of type saveorderconfig:â†’ oldsaveorderconfig: represents the old configurationâ†’ newsaveorderconfig: represents the new configurationwe compare the equality of its last two to see if a change has been made or not after several tests we realized that the equals function in saveorderconfig did not take into account the equality of all attributes || hi @siedlerchr i inform you that i tried our correction on todays version it also worked !! || hi everyone sorry for the delay as my colleague explained above regarding the explanation of the fix i put here screenshots of the bug fix instead of the screen recorder because i cant put it in the comments![sã©lection_054]( || thanks for the explanation lgtm || we merge to get things moving forwardwe will add the `changelogmd` change by ourselves ||
6403.0,6406,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,restore some missing keyboard shortcuts 6403 - change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository thanks again for the contribution would be cool if you could check the other keybindings as well if there are some missingã simply search for reference should be the easiest way to find any missing one ||
6297.0,6407,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,1.0,an issue where a new entry is not shown in the library if a filter/search is active 6297 i used the existing endsearch method of globalsearchbar to clear the search if a new entry is addedprobably the solution is quite quick and dirty and i am not sure if it fits to your architecture and if i added it at the the right spot in the codei would be happy about feedback and advice for the future! - change in changelogmd described (if applicable)- - - (for ui changes)- []( @nsmt09 it would be really cool if you could change this so we can merge your pr || > @nsmt09 it would be really cool if you could change this so we can merge your pr@siedlerchr sorry i was really busy the last weeks totally forgot about thati adjusted the fix like you recommended by injecting the statemanager and using clearsearchquery ||
369.0,6504,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,enable users to simultaneously search all searchbasedfetchers this pr enables users can send queries to all e-libraries simultaneously through the `websearchpane` ref 369]( adds a new `searchbasedfetcher` called `compositesearchbasedfetcher` that delegates the query to all of the fetchers it is composed of and merges the fetched results in `webfetchersgetsearchbasedfetchers` a `compositesearchbasedfetcher` is added that contains all `searchbasedfetchers` if this pr gets approved an additional [documentation entry]( has to be added- change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at it would be nice if you could some more fetchers to your test and also test what happens when one fetcher returns an errori replaced the tests with parameterized tests || > thanks for your contribution i like the idea!im happy about that!> for now only a initial impression after scrolling through the code: did you test it in a running jabref?i tested it with a few queries and it worked so far ^^ > im somewhat afraid that this quickly leads to jabref being blocked by some databases since it issues quite a lot of requests moreover if i understand the implementation correctly then every fetcher is always asked which should lead to quite a huge list of returned entries (probably with perhaps many duplicates)one option might be to offer the user a way to configure which fetchers to include?in my current implementation i do not offer any post-processing yet i think doing post-processing in the fetcher is not a great design idea what do you think? :) where should i implement the post-processing of the fetched entries? || jaxb refs #6350 and ||
6692.0,6693,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,issue 6692 6692 renamed listbind to bindcontent where it was used
6175.0,6768,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,merge identical group color indicators 6175 this pr finishes the prs of @wangaooa (see #6566 ) and does some cleanup in the maintablecolumnfactory: linkedidentifiercolumn filecolumn and specialfieldcolumn is now extracted in separate classes- change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository the jabref maintainers will add the following name to the [authors file]( in case you want to use a different one please comment here and [adjust your name in your git configuration]( for future commits```wangaooa``` || the jabref maintainers will add the following name to the [authors file]( in case you want to use a different one please comment here and [adjust your name in your git configuration]( for future commits```marcel luethiwangaooa``` || the jabref maintainers will add the following name to the [authors file]( in case you want to use a different one please comment here and [adjust your name in your git configuration]( for future commits```marcel luethiqingshiqingliuwangaooa``` || checkstyle is happy again so i am merging ||
6532.0,6833,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,fix/use format conversion for all imports this pr adds conversion of entries into the desired format for all imports6532 - change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at expected: but was: orgopentest4jassertionfailederrororgopentest4jassertionfailederror: obsolete keys found in language properties file: this\ query\ uses\ an\ unsupported\ syntaxthis\ search\ contains\ entries\ that\ match\ all\ specified\ terms``` ||
6934.0,6941,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,fix: in entry types editor selected field is not removed after first click 6934the issue is happening because cells with delete icon are set editable (because the whole table is set editable) - go through the list below if a task has been completed mark it done by using ``- please dont remove any items just leave them unchecked if they are not applicable-->- change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository thanks for spotting and fixing this erro! i have adjusted the changelog a bit ||
6579.0,7039,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,add short date formatter add formatter that can format the month field to use the shorthand abbreviation 6579- change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository
369.0,7082,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,feature/enable paginated fetchers this pr adds complex search query support for paginated fetchersit additionally implements the corresponding interfaces for a couple of fetchers (arxiv scholar ieee xplore springer link)refs #6236 #5507 369]( [koppor#347]( change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository
7168.0,7179,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,disable slr in ui until #7126 is merged this pr addresses the issue of integrating the slr feature in the planned release version without #7126 by disabling itrefs #7168 - change in changelogmd described (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository
2292.0,7549,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,add ability to insert arxivid #2292 pasted `arxivid` creates new bibentry - change in `changelogmd` described in a way that is understandable for the average user (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository thanks again for your contribution! thats very useful! ||
7635.0,7636,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,add more unit tests to three gui classes this pull request replaces #7635 (closed/not merged) and it contributes to issue #6207 which is to add more unit tests to the project in this case specifically in the gui package using test doublestests added:newentryactiontestcopymoreactiontestexporttoclipboardactiontestin order to add the exporttoclipboardactiontest and to migrate to using preferencesservice code refactoring has been done as suggested by @siedlerchr the purpose of the refactoring is to add preferencesservice as a parameter in the constructors of exporttoclipboardaction to replace the globals variable refactored classes are as follows:exporttoclipboardactionjava jabrefframejava rightclickmenujava jabrefpreferencesjava preferencesservicejava - change in `changelogmd` described in a way that is understandable for the average user (if applicable)- - - (for ui changes)- []( if not created an issue at < or even better submitted a pull request to the documentation repository @calixtus can you take a look at the globalsprefs extraction? || @ningxie1991 would be nice if you could address the hints related to the test you can use mockitos any method without specifying the exact localization content etc `verify(dialogservice times(1))notify(any())` ||
7439.0,7705,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,added preset for new entry keybindings and reintroduced defaults added preset for new entry keybindings on public demand7346fixes #7439- change in `changelogmd` described in a way that is understandable for the average user (if applicable)- - - (for ui changes)- []( if not created an issue at seem like someone was too fast with merging unit tests i think tobi fixed them a few minutes agomerged `main` hope checkstyle will be fine ðÿ˜‡ || before merging we should get to a conclusion about which shortcuts to keepdoes ctrl in uppercase work now or should i change them now? || also i dont really understand why on macos we need two different shortcuts one for opening the entry editor and one for closing it this needs to be fixed || > before merging we should get to a conclusion about which shortcuts to keep> does ctrl in uppercase work now or should i change them now?should be lowercase regarding the ctrl + e (which maps to cmd + e on mac) i think i found the issue and i remember its a bug in javafx the event is fired twice for some reason thats why after closing it immediately goes into the openentryeditor again and reopens the entry editoredit// yep: already was an issue with copy paste happening twice ||
