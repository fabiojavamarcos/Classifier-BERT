issueNumber,prNumber,Util,NLP,APM,Network,DB,Interpreter,Logging,i18n,DevOps,Logic,Test,IO,UI,Security,App,corpus
314,491,1,0,0,0,0,0,1,0,0,0,0,1,1,0,1,add close all others in database tab menu see changelog is missing otherwise +
669,677,1,0,0,0,1,0,1,0,0,0,0,1,0,0,1,make bibtex parser more robust against missing newlines as described in and the parser has some problems when an entry or preamble follows directly the file encoding header on the same line ie % encoding myencoding article{} actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for and since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content + except my minor comment corrected for some reason the code style was not imported correctly in intellij hm i just use the default intellij code style tobiasdiez what do you think should be done to fix the above issues completely lenhard in my opinion jabref should add new lines after the encoding and preamble im working on a solution right now including a bit of refactoring to make testing easier tobiasdiez ok good to hear ill concentrate on other issues then
454,734,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,add an optional tab that shows fields that are not displayed inside tâ€¦ â€¦he predefined tabs
455,915,1,0,0,1,0,0,1,0,0,0,0,1,1,0,1,add button in preference dialog to reset preferences implements and or change in changelogmd described only ui change nice looks good but i would add a note that resetting the perferences requires a restart see change the language or the remote settings good point an info message is now shown looks good to me
707,925,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,add tests for metadata parsing this solves and prepares the way to refactor the metadata classi added a few methods to the metadata class to make testing more convenient many calls to getdata in fact can be replaced by these new methods i think this is something for a new prone question to write the tests in a nice way i had to overwrite a few equals methods in particular for the lowercasechanger should i also override equals for all other formatters + when is the equals required except for simplifying this test seems like one can add them later if requiredthe pr looks good no as far as i can see equals is never used for the formatters and also no getkey equals which could be replaced with an internal equals
936,937,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,preview panel is now updated when an entry is cut deleted when an entry is cut deleted the preview panel will be hidden due to the fact that no entry is selected anymore change in changelogmd described looks good + + + does the panel show up again when selecting another entry after deleting one if so + yes it does we really should consider to implement an event system + for the event system maybe use the stuff that comes with google guava
1012,1014,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,improved exception handling in tests cases never catch an exceptionremoved unnecessary exceptionsthrow specific exceptions never only exceptionref good work + siedlerchr btw you should assign your commit email with your github account see oscargus fixed stefan kolb i just added my git mail address to my github account as secondary mail address was done by eclipse will change this back
963,1041,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,write database type in lower case into the bib file this finally a quick fix has been introduced in eea e but that does not cover the lower case writing of the type comment{jabref meta database_type bibtex} finally gets comment{jabref meta databasetype bibtex} change in changelogmd described this has been introduced in the development versions after the last release thus no entry required tests have been adapted to match this new implementation is the parsing case insensitive is that tested oscargus the value is parsed case insensitive
1055,1056,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,fixes npe in export to external db fixes npe in export to external dbadd db type to export succesful messagereformatting no changelog because i think it was new introduced by the redesign of the entry sorting passing null export now all entries by default
1163,1168,1,0,0,1,0,0,1,0,0,0,0,0,1,0,1,by removing the strange functionality which enabled sortingâ€¦ we have some very strange logic in jabref which allows to handle years using only the two last numbers so we can detect that means this causes a lot of issues i do not think that jabref should still support such strange logic and just use the value which is in the year field hence i removed it this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class refs lgtm + lgtm + should we readd yearutil as a cleanup to convert two digit years to four digit years if we add it we should make use of the java functionality instead of the own ugly parsing this one http stackoverflowcom questions parsing string to local date doesnt use desired century
936,1192,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,preview panel is now updated when an entry is cut deleted again when i fixed some time ago pr i made a tiny errorthe issue was to hide the preview panel when deleting cutting an entry but it also hid it when aborting the delete confirmation dialogi too refactored both actions a little to make it easier for future changesi also removed in undoableremoveentry and undoableinsertentry the id generation
1091,1229,1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,apply and ensure correct import sort order see + lgtm +
871,1298,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,added option to copy version information in the about dialog added option to copy version information of jabref in the about dialog as described in this will help with filing issues and bug reports as the version of jabref os and java will be copied change in changelogmd described screen shot at https cloudentcom assets a bbc b e bbf b cb b cdpng just one minor comment otherwise this looks good please rebase current coverage is % merging into master will decrease coverage by powered by codecov last updated by a f https codecovio gh jabref jabref compare a da e e b c a b ca f c e a aae b c f dd a a f
1312,1318,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,update localization instructions corrected gradlew task name koppor stefan kolb please check the order of the imports hm will check my eclipse settings again gradlew eclipse should be enough we are generating the correct settings no need for manual intervention koppor fixed the import order the setting was not activated in my eclipse saving options current coverage is % merging into master will not change coverage diff master diff files lines methods messages branches hits misses partials powered by codecov last updated by aa b lgtm +
135,1388,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,fix sorting issue the logic is fucked but this should fix the issueproblem was that when sort in original order was selected the corresponding variable newsortorder would still read the disabled sort order inside the jdialog
1063,1397,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,add fields for nbibimporter and add testfile regarding medlineplain importer doesnt have all fields that the nbib format has so i added the fields to the medlineplain format and added a test+ testfile for the nbib formata list of the elements that should be imported now can be found here you should also record your changes in the readme lgtm for somehow the travis ci is failing because an integration test scrollingthroughentrylist fails lgtm too just some minor remarks for readability
1342,1429,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,show description of case converters as tooltip change in changelogmd described lgtm +
1420,1440,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,auto downloader should respect file pattern and propose correct filename https cloudentcom assets a fa e a cfac d png lgtm lgtm +
651,1443,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,improve parsing of author names containing braces change in changelogmd described lgtm
888,1453,1,0,0,1,0,0,1,0,0,0,1,1,1,0,1,refactor placement of parsing and writing logic according to the following conventions all objects which can be read from a string have public static type parse stringy input method all objects which can be written to a string have a public stringy getasstring methodshould change in changelogmd described i am still an advocate of separate read write classes which handle the serialization in both ways because using an interface with fromstring tostring methods would allow to make this more explicit in the code and ensure that these methods are not renamed by accident using separate classes for reading writing would make the classes themselfs smaller and allow a better separation of concern easier to test as one only needs to look at a single cread write class with its own test yes you are right that separate read write classes are probably even better nonetheless i find the changes made in this pr are still an improvement and im quite satisfied with the result satisfied enough to have no motivation for introducing new read write classes i changed the names thanks for the feedback
1444,1487,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,implement getextension and getdescription for importers implement getextension and getdescription for importers change in changelogmd described please fix the minor things after this mark it again for ready for review and we will merge this in
1249,1584,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,added layout dateformatter see added a configurable layout formatter for dates change in changelogmd described lgtm just merge after you removed the generated comment
1592,1599,1,0,0,1,0,0,1,1,0,1,0,1,0,0,1,fixed this should change in changelogmd described lgtm
1288,1671,1,0,0,1,0,0,1,0,0,0,0,1,1,0,1,newly opened bib file is not focused open a new file and it is correctly focused afterwards open a file that was already opened before is correctly focused afterwards open a file two times and it is only opened once matthiasgeiger should work now smile lgtm apart from the minor comments via skype wink
1881,1888,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,do not mark a new database as changed i missed an if statement when inverting an if else in ~~ change in changelogmd described~~ introduced in development version only fortunately manually tested changed features in running jabref
1920,1942,1,0,0,0,0,1,1,0,0,0,0,1,0,0,1,mods importer regarding adds an importer for the mods xml format the importer is written with a jaxb parserdetails on the format and the newest xml schema can be found here used the newest schema version change in changelogmd described manually tested changed features in running jabref i just merged my xmlunit changes n i think it can useful for you too allows checking validating xml against a schema too i think your code looks good but generally i would like to see more comments and try using more lambdas + i dont really get why travis is failing the problem seems to with the integration tests not related to your changes hm im also wondering why codecov is not running the tests the test coverage should be much higher i dunno about codeco from my point of view its good + boceckts please have a final look okay i merge it in now as all things are resolved + regarding the failing tests we should investigate that in a new issue
1943,1944,1,0,0,1,0,1,1,1,0,1,0,1,1,0,1,try around with xmlunit see for details change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues please fix the two comments and then directly merge it
1877,1950,1,0,0,1,0,0,0,0,0,0,1,1,0,0,1,towards hierarchical keywords this pr is the first step towards supporting hierarchical keywords refactor the keyword related code to use new classes keywordlist and keyword unified keyword delimiter to be a single character and in this way fixed the issues mentioned in and move keyword delimiter from preferences to metadata database properties new pr add hierarchical delimiter and change parsing logic in keywordlist accordingly new pr change ui to support hierarchical keywords new prnote i also moved the stringutil class to model in some sense it is jabrefs own string class and removed entryutil only had methods related to strings stringutil or keywords keywordlist change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
1958,1970,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,verbatim url field is no longer checked for html encoded chars change in changelogmd described manually tested changed features in running jabref please adjust the javadoc comment and then its good to merge +
1979,1981,1,0,0,1,0,0,1,1,0,1,0,1,1,0,1,icon does not change when toggling global search issue
2109,2114,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,ctrl s parsing error message ctrl s doesnt trigger parsing error messageproblem conflict of local shortcut of the entry editor with the global shortcutsolution local shortcut removed the action assigned to local and global shortcut is essentially the same save database change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate i have tested it and can confirm that it works removing the local shortcut is fine this was certainly the relic of some migration since it is not too much in size there is no need for a second review and ill merge right away grimes good job as always
2133,2163,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,fix highlighting issues earlier highlighting was done manually by adding tags to matches in the html text being sent to the pane instead i have opted to make use of the highlighting features of the jeditorpane class this gives the additional benefit that the highlight colour is changed automatically based on the system theme changes created jeditorpanewithhighlighting class removed matchhighlighter class and its tests removed highlighting related tests from layoutentrytest change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate checkstylemain ant checkstyle error home travis build jabref jabref src main java net sf jabref gui worker citationstyleworkerjava javaxswingjeditorpane should be separated from previous imports importorder thanks for your contributionwhat stefan kolb is telling you that the tests are currently failing as you do not respect the order of the import we defined in your changed classesplease check and or run gradlew eclipse to adjust the settings of intellij eclipse to order the imports correctly thanks stefan kolb and matthiasgeiger i forgot to run the checks before submitting no worries shitikanth ðÿ˜„ these check style things are a little bit nitpicky ðÿ˜‰
2168,2169,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,fix failing ads test added missing fields are really strange field values but this is a discussion for a post cleanup for now this hotfix is good
2177,2179,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,clear bibtexkey exception nullpointerexception caused by clearing bibtexkey field in entry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate the version does not have exactly the same bug but the old code was also buggy because in a short test i run in severe freezes ive removed changelog entry
2208,2211,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,prevent the search to get focus when deleting pasting an entry fixes when you delete an entry the focus will no longer jump to the searchbar instead it will select the next entry also counts for pasting now it works for cutting entries tooi removed the code duplicate although im not sure about the the pattern not able to use runcommand actionsdelete to me code looks good +
2218,2226,1,0,0,1,0,0,0,0,0,0,1,1,0,0,1,fix for reenable ads fetcher see fetcher is now working again ~~ change in changelogmd described~~ affected search based fetcher still unreleased tests ~~created for changes~~ pass again ~~ ~~ manually tested changed features in running jabref ~~ helpjabreforg ~~ if you changed the localization did you run gradle ate ~~
2228,2229,1,0,0,1,0,1,1,0,0,0,0,1,0,0,1,fix medline fetcher by using https fix for change in changelogmd described helpjabreforg write blog post regarding november ncbi servers will redirect or reject all requests
2394,2400,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,groups matching with brackets in name change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2546,2554,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,replaced lrumap with a guava cache this is intended as a fix for note that the guava caches would allow for automated reloading of the entries but this is not undertaken in this implementation instead everything should work as before with the lrumap change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks â¤ï¸ can you please also change the external librariestxt and remove commons from there also small issues checkstylemain ant checkstyle error home travis build jabref jabref src main java net sf jabref logic pdf fileannotationcachejava wrong order for netsfjabrefmodeldatabasebibdatabasecontext import importorder ant checkstyle error home travis build jabref jabref src main java net sf jabref logic pdf fileannotationcachejava wrong order for javautilhashmap import importorder checkstyle help thanks for the feedback there is quite a potential to improve stuff with these caches maybe ill have a look at the big picture there later
2501,2614,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,cleanup window has a scrollbar now fix for issue change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate it should be fixed now thanks again for your contributionill merge this in as the failing google scholar tests are not related to your changes
2660,2661,1,0,0,1,0,0,1,0,0,0,0,1,1,0,1,add possibility to clear the log at runtime tobiasdiez the dialog is not modal but does not update itself when new events arrive ie needs to be closed and opened again to see new events is this expected can we fix this yeah stefan kolb is now an active javafx developer ðÿ˜¼ code looks good so ill merge this actually new logs should be displayed automatically in the console this is why it is modal thus this is probably a bug can you please open a new issue i dont have time right now to further investigate this thanks
2664,2711,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,avoid conversion of single underscores single underscores that are not followed by { are not converted to unicode during the latex to unicode conversion this is not actually correct according to the rules of latex but seems to be an important exception required by our usersthis is achieved by the following replace all single underscores with jabrefunderscore do the unicode conversion replace jabrefunderscore with an underscoretodo we should find a better magic word instead of jabrefunderscore because every character will be processed by latex unicode and that costs performance however it should still be long and unique enough so that we avoid accidental conversions suggestions anyone change in changelogmd described manually tested changed features in running jabref what about the unicode replacement char excellent idea siedlerchr i have implemented this using the replacement char and it still works as discussed in the devcall this can be merged aber fixing checkstyle
2806,2816,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,date editor also accepts incomplete dates should fix and change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2890,2891,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,adjust tests ads fetcher returns url dblp no longer works with negative operators internal change only some adjusted tests
2854,2921,1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,readd context menu to linked files editor this was the last feature missing from the old file list editor the old class could thus be deleted change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate codewise looks good but you do have an architectural violatin your model class depends on gui import orgjabrefguiexternalfiletypeexternalfiletype and i tested it locally apart fromt he keybindings problem it works but i found one bugi can not delete a file entry which has no underlying file just add this line in your bibdatabase and try to delete the entry then file { kitamura a supporting tool for requirements elicitation using a domain ontologypdf pdf} it gives you an error message file not found
2968,2972,1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,add remove link context menu entry in file editor fix for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2993,2995,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,less backups addresses the frequent events are due to the bidirectional binding which transfers every change directly into the bibentry if we want fewer events the only solution will probably be to break the binding which would be very disappointing for the javafx implementation in my point of view the problem is not on the side of event creation after all every change should trigger an event and javafx triggers many changes imho this should be fixed in how we react to eventsi also noticed the exception but do not get a dialog this seems to happen because of the save operation invoked by the backupa solution might be to do less backups by doing backups only every x events and not for every event ignoring fieldchangeevents in the backup adding the size of the field change in the fieldchangeevent class so that you can ignore it if only character changedthis pr combines options and ie the backup manager ignores events that are very minor and only does a backup if enough of them have happened currently set to five what do you think change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
2787,2997,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,changes in the entry editor mark the database as dirty partial fix to changes in the entry editor now mark the database as dirty this are somewhat proactive even only opening the entry editor will mark the database as changed id say this isnt a problem id rather have it do the marking than forget oneessentially this adds another listener to the properties in the entry editor that propagates the change whenever the property changes i havent figured out how to do this for groups change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate id say this is a hack whereas it is better than missing a changed state for now we should only mark the db as dirty if we really changed something im also not very happy with this solution from an architectural view why should the gui handle the dirty clean state and not the logic i would propose to add listeners to the database metadata in databasecontext which sets a corresponding flag the ui can then listen to changes of this new property and display the star in the tab accordingly the databasechangedevent is already realized with the eventbus system so it just needs a couple of listeners if i understand it correctly and one event bus can have multiple listeners for the same event ok i see so far it had been implemented only in the basepanel but i aggree that the cleanest solution is probably to track it in the database itself this wont be as quick as the current solution though the consensus seems to be that we are not going in this direction so ill close this pr
2980,3007,1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,add preference migration for keybdingings fix for change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3074,3092,1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,fetcher timestamp ok i tried to create a own preference class not sure if ive done that correctly as intended at the moment should i also replace calls to the preferences inside the general tab
3190,3203,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,when groups are removed also remove them from entries change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate ok i managed to get this done and i think ive addressed everything as the reviewers desired it can be merged from my point of view so please have a look and merge if you think it is ok one more try now only explicitgroups are removed from entries keyword based groups are kept i hope this is the last missing puzzle piece sorry for being pestic but with this implementation keyword groups that are children of the deleted explicit group are still handled wrongly i directly committed a fix if you are fine with it you have my ok for mergeby the way in order to convince you about the testability of javafx code you are invited to write a test covering the new behavior ðÿ˜ˆ thanks challenge accepted i did not only add one test but threei will merge when the build goes through
3172,3211,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,added logic to check whether linked file already exists added a check in linkedfileviewmodelrename to see if a file which isbeing renamed already exists in the target location if such a file isfound then an error popup displays informing the user of the conflictuser will be prompted to choose whether to overwrite or cancelalso see for additional details this work fine and includes all the requested changes from the previous pull request with one caveat if the file being overridden is related to a different entry and has different case such as entry abc renamed to def entry def then the nd entry file association will target a now non existing file its possible to get around this by searching the database for any entries that have the old filename def and changing the association to the new filename but i dont know if thats something desireable so i decided to push this as is for now ok i changed to an optional and removed filesexists targetfilepath as its redundant im still getting the hang of git and egit so hopefully the merge didnt mess anything up andrew lev i stick to git and git gui from command line a lot easier than struggling with the eclipse git client thanks this looks really good now
2811,3248,1,0,0,1,0,1,1,1,0,0,1,1,1,0,1,fix for issue bibtexkey generator does not use crossref information see the bibtex key generator now uses crossreferenced entries if required fields are empty change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues m that is really an impressive amount of tests good jobthere are two merge conflicts could you resolve those once thats done this pr is ready to go into master and once again thanks
3292,3325,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,annotations are now automatically refreshed this pr aims to by removing the refresh button completely and monitoring the pdf files automatically for changes in the progress of the implementation a few refactorings were made extract the file monitoring functionality from fileupdatemonitor to a new class and convert the timestamp based method to the new nio watcher interface extract the conflict handling code by external bib file changes from the base panel to a new class databasechangemonitor where also some of the old code from fileupdatemonitor now finds a new home this class is still a bit ugly but in my opinion better than before i hope that the conflict handling still works as expected i tested it but might have missed some special cases configurations change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate the changes are a bit hard to review but i have tested it locally and the annotations are refreshed as desiredi have another point though one that might entail some work since you are already touching this code do you see a change of refactoring the complete collab package so that it fits better to our architecture if we just take the current dependencies in the package then the whole thing would basically go into gui this already would be an improvement because the source code packages in root would already look a little more like where we want to gobut to be honest i do not get why file monitoring functionality should belong into the gui part at least part of that should be extractable into a non gui part and should be movable into logic if i look at changescanner then basically everything from line downwards is gui independent code i also dont see why change and its subclasses should be so heavily tied to ui code as far as i can see this is only because the code is tied so strongly to the undo framework couldnt we extract that part and move the change classes to a deeper layer ok ill merge this now and will have a look at the collab package later i second your concerns lenhard much of the code their should actually reside in logic this would also help siedlerchr in his endeavor towards sharelatex integration
3358,3388,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,added checking integrity dialog this change is related to jabref looked like it is hanging during long integrity checks i added a dialog with a progress bar to show that it is working checkingintegrity change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate thanks for fast response i fixed the problems thanks for your contribution i tested the changes locally and it works fine feel free to look at other issues as well
3500,3502,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,update user agent and change acm to https fix acm fetcher change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate hmmmm thats odd for me it worked will take a look at it okay i tested things again and i cannnot reproduce your error works fine on my side tested again still same error regardless of how i configure the fetcher in the uiit seems that someone else should be testing this as well is this the right test setting works here i get the same error on current master so this is probably unrelated to this pr seems what i get back from acm is chinese instead of a web page which probably means some encoding problem acm shouldnt block the current pr which i am merging now
3359,3506,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,automatically remove colon and apostrophe from key pattern colons and apostrophes are now removed from the generated key patterni also refactored the key generator mainly converting the static methods to instance methods change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate lenhard i manually tested most use cases where the code changes except openoffice since i dont use it what are our current plans for the release when do we want to release if there is still some time before the release i would prefer if this pr is merged before the release you may want to add the percent sign and the ampersand & which is problematic as it creates a problem with biber biblatex should this still go into tobiasdiez when you fix the checkstyle issues and conflicts then this pr can be merged
3538,3539,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,fix options databinding by adding elements if they are not in the initial map i dunno if this is the best idea but it works change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate can you please explain the reason for the bug in general the string converter should not modify the source or target map the reason for the bug is that the fromstring method does a lookup in the map with the current txt in the field if you enter a non predefined string into it the map lookup returns null because not found
3476,3551,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,make path relative when adding automatically found file change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3598,3600,1,0,0,0,0,0,1,1,0,1,0,1,1,0,1,make it possible to disable autocompletion in the search bar by covering the autocompletion in the search bar with the same preference option as in the entry editor change in changelogmd described manually tested changed features in running jabref helpjabreforg if you changed the localization did you run gradle ate
3648,3670,1,0,0,0,0,0,1,0,0,0,1,1,0,0,1,chained modifiers work again the problem was that resultinglabel formatterget format label always used the original input and not the result of the previous modifier change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
364,3709,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,group separator escaping
2617,3766,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,update architecture tests to catch static imports fixes a part of updates the architecture tests to junit and also catches violations in static imports now i tested this by adding a static import and checking that the build breaks it does but of course i had to remove the cause again change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3885,3887,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,improvements around external file types because github does not support autolinking there i tried to implement but changes of the file type in the linked file editor are not saved for some reason ill investigate this again after is mergedthus only some relative minor code improvements fixes refactor external file type classes and extract a common externalfiletype interface extract all built in file types to separate enum implementing externalfiletype fix display of external file type editor dialog which is not shown in the current maintable beta version change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues since this pr is now ready for review over a month ill merge it despite not having any feedback so far
3269,3904,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,add union intersection toogle to groups menu because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues yeah i already thought about the same especially a way to indicate the current status would be nice so maybe an icon status somewhere i also like these circle indicators from set theory eg as you are working on the design any idea where to put such an icon for the groups siedlerchr i think the header of the groups view is the best place in idea this is similar the view settings for the project tree is in the top right corner of this panel so for me this would be the first place to look if there are several of such view options we probably need to make a button that opens a context menu if there are only two buttons they might fit into the existing header i will create a new pr based on maintable beta
3929,3931,1,0,0,1,0,0,1,0,0,0,0,1,1,0,1,correct fetcher messages siedlerchr we do
3966,3968,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,fix ieee fetcher by enabling cookie support apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3966,3970,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,fixieee followup from my previous prnow document links in the format are supported tooand i also tested the paper linked in the issue from university network that works fine too because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3973,4011,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,reimplement tooltips for file and identifier columns this reimplements tooltips for file url doi and eprint column in the maintable beta change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks again for your contribution
3062,4184,1,0,0,0,0,1,1,1,0,1,0,1,1,0,1,ctrl + f selects search field again because github does not support autolinking there shortcut was simply not registered also remove a bit of legacy code which is no longer needed change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4201,4212,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,make attached files relative to the file directory because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4202,4245,1,0,0,1,0,0,1,1,0,0,0,1,1,0,1,fix style issues in about dialog because github does not support autolinking there and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states merge instead of squashing the commits change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues lgtm i am merging this now
3959,4258,1,0,0,1,0,1,0,1,1,0,1,1,1,0,1,migrate to junit because github does not support autolinking there migrate some packages imported from junit to junit such as orgjunittest orgjunitjupiterapitest orgjunitexperimentalcategoriescategory orgjunitjupiterapitag and so on at the same time we slightly modify some codes which rely on those packages and doesnt apply to junit but applys to junit for example we change test excepted xxxclass into using assertthrows and lambda category xxxclass into tag â€œxxxâ€ before into beforeeach and so on change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues first of all thanks for your contribution ðÿ‘ i just took a quick look at the code and it seems youre on a good wayit would be really nice if you convert the temporary folder rule from junit to junit as well tobiasdiez already implemented a sample conversion in a test in addition it would ne also nice if you could migrate the reaming parametrized tests the old ones rely on the runwith examples for the parametrized test can be found in the exporters i thinki think we can get rid of the swing gui tests as they are merely obsolete now that another pr was opened witch converts the tests from junit to i would propose the following you make this pr compile ie fix all the failing tests in a minimal intrusive way ie no further conversion of other tests we merge this pr and then afterwards everything that is still junit at this stage can be converted in further prs obsolete due to
4305,4311,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,fix drag and drop in entry editor comment same issue described consistent with preview panel behavior because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues as its a copy and paste of the method handling in the preview panel i merge this now
4329,4337,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,fix export of corporate author to msoffice fix testsfix the underlying problem is the same as in however i came up with a workaround for msoffice getting the original field check for corporate author braces start and end get latex free value readd braces for corporate parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces
4288,4355,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,auto trim url field because github does not support autolinking there fixes created a formatter to auto trim all kinds of whitespace defined by java change in changelogmd described manually tested changed features in running jabref _no need_ helpjabreforg https githubcom jabref helpjabreforg issues
4388,4389,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,display deprecated fields in misc entry also in optional fields tab the reason for the original code was to however i couldnt reproduce the issue mentioned there after i removed it the custom entry types dialog effectively prevents you from adding from the same field twice because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3189,4429,1,0,0,0,0,1,1,1,0,0,0,1,1,0,1,fix bug when edit group name issue bandicam https user imagesentcom bf b db b e d eee c dadgif
3189,4470,1,0,0,0,0,1,1,1,0,0,0,1,1,0,1,fix group renaming fix group renaming fixed please have a look at the failing tests and please test if the latex stuff is still transformed to unicode after rename ali kz why did you close the pull request you can simply push your changes to your branch and the pr is updated tobiasdiez could you review again
4544,4547,1,1,0,1,0,0,0,0,0,0,0,1,0,0,1,do not extract file ending from urls do not extract file ending from urls should also please check tobiasdiez i cannot access jstor stuff due to however with any url and some appended key values like accetptrue it works for me again please fix the checkstyle issue import with is not allowed
3189,4549,1,0,0,0,0,1,1,1,0,0,0,1,1,0,1,fixes that renaming a group did not change the group name in the interface
4600,4604,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,enable default cursor for new entry sets text field on focus at the end of initialization by running the javafx thread change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4641,4644,1,0,0,1,0,0,0,0,0,0,1,1,0,0,1,fix for issue remove usage of tempdirectory extension from junit pioneer fixes removed the tempdirectory extension from junit pioneer with the built in extension of junit manually tested changed features in running jabref https githubcom joelparkerhenderson git_commit_message perfect thanks a lot
4614,4696,1,0,0,0,1,1,1,0,0,0,0,1,1,0,1,remove resolve duplicate keys dialog because github does not support autolinking there removes the resolve duplicate keys dialog this feature is made obsolete by the integrity check and the user can generate new keys very simply for all entries or only for the duplicated ones through the entry editor and or menu change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues well however on import there should be a warning and the option to resolve duplicate keys its essential to discover duplicates siedlerchr such a feature wasnt implemented the only check was when opening a database and is obsolete with my other pr where now keys are automatically generated for every imported entry duplicate entries are also highlighted in the import dialog okay then i see no problem
4724,4731,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,fix default import format pattern remove display arrayadd migration because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4474,4738,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,adding support for input methods because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thank you i am enjoying the process so far
4583,4758,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,modifications to improve contrast of ui elements because github does not support autolinking there fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues lgtm thanks for the contribution tobiasdiez do we need to adjust the dark theme as well i think in the dark theme everything is dark so need for action
4755,4761,1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,enable import button only if entry selected because github does not support autolinking there fixes change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4733,4780,1,0,0,1,0,0,1,0,0,0,1,1,1,0,1,nightly indicate the build date and git revision add the information of the latest jabref version and its release date in about panel screenshots of the new layout aboutjabref pr because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your pr it appears that we both misunderstood the request in i also thought that the corresponding build date should be added to the about dialog however this information is already displayed in the lower part there is no reason to show the build date also at the top sorry to say but this makes your pr sadly obsolete
4819,4822,1,0,0,1,0,1,1,0,0,0,0,1,1,0,1,convert autolinkfilesaction to javafx also convert a few other message boxes to javafx because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues lgt build failing is due to previous problematic pr with cleanup
4735,4839,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,fix parser exception when loading tex groups with non existing file catch file not found exception and handle non existing aux files gracefully because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
3905,4860,1,0,0,0,0,0,1,0,0,0,0,1,1,0,1,remove deprecated awt apple extension because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues linusdietz halirutan could you please test if this removal breaks anything related to mac the only thing from the code might be the file handling eg double click on a bib file in the finder tested it for a day no issues appeared
4886,4964,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,remove ui threadlist for maintable as it prevents sorting in maintable renenables sortingtried a bit around and could not find any side issue so far because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues added it around the original getentries that works now as well jabref dev snapshot master baa bd linux generic amd java _ yes seems to work fine its a little slow perhaps jabref seems to need a up to seconds to sort a newly selected date year column thinkpad t with i core cpu bib database with + entries and a few seconds after a sort to start receiving keystrokes again alphabetic field columns sort more quicklythanksdominik tobiasdiez i didnt encounter any problems with the cleanup maybe we can remove the wrapper seems to cost performance
4997,4999,1,0,0,1,0,1,1,1,0,1,0,1,1,0,1,fix iee fetcher add exception dialog on import failcheck if we have keywords field present in json because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5043,5048,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,preserve encoding while copy and pasting in maintable encodes and decodes data with utf merging this now
5045,5086,1,0,0,1,0,0,1,0,0,0,0,0,1,0,1,bugfix modified the existing logic to comply crossref resolution with biblatex specification because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks for your contribution could you please add a test for the changed code tobiasdiez siedlerchr sure ill make those amendments and the uts tobiasdiez could you please review the latest commit thanks looks good to me now please merge the latest master changes in there have been renaming of the fields classes so you need to fix this then we can merge siedlerchr i pulled the changes from master this pr can be merged to the master now thanks please review the importsfixed and organized imports please review and merge please review the imports fixed and organized imports please review and mergeplease have a look at travis checkstyle output star imports are not allowedif you use intellij you can directly import the code style from the config folderfor eclipse you can run gradlew eclipse to automatically import the correct code styleif you then run organize imports in the ide it will be correct please review the imports fixed and organized imports please review and merge please have a look at travis checkstyle output star imports are not allowed if you use intellij you can directly import the code style from the config folder for eclipse you can run gradlew eclipse to automatically import the correct code style if you then run organize imports in the ide it will be correctfixed imports issue please review
5002,5123,1,0,0,0,0,1,1,0,0,0,0,1,1,0,1,add search for citations in latex files back end and gui here is a latex parser tool that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will ask the user for a directory to search tex files then the user could select specific files after that the tool parses these files and shows all the bibliographic entries found in a new dialog box latex_parser issue change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues thanks a lot
5194,5195,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,add citation commands to texparser we added a few more citation commands autocite autocite blockcquote and textcquote this pr change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4836,5210,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,fix double paste on different os fixes fixes upon pasting macos calls the system paste as well as jabrefframeeditactionexecute this caused a duplicate call of the paste working in linux as well
4845,5210,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,fix double paste on different os fixes fixes upon pasting macos calls the system paste as well as jabrefframeeditactionexecute this caused a duplicate call of the paste working in linux as well
4612,5229,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,add doi url eprint field to general tab layout because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
522,5266,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,issue issue add software and dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in software and dataset entry type entrytype change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues looks good so far please add a changelog entryregarding the fields you can look up in the biblatex documentation the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes xxxx or xxx then the issue will be automatically closed when the pr is merged which biblatex styles support dataset biblatex bath does https ctanorg pkg biblatex bath
5223,5266,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,issue issue add software and dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in software and dataset entry type entrytype change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues looks good so far please add a changelog entryregarding the fields you can look up in the biblatex documentation the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes xxxx or xxx then the issue will be automatically closed when the pr is merged which biblatex styles support dataset biblatex bath does https ctanorg pkg biblatex bath
3142,5325,1,0,0,0,0,1,1,1,0,0,0,1,1,0,1,use binding to update global state manager because github does not support autolinking there use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular and fixes moreover i fixed an error that was thrown when interacting with the toolbar missing open statement but we were using reflection change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4846,5326,1,0,0,1,0,1,1,1,0,0,0,1,1,0,1,fix problem with search and switching between libraries by using bindings instead of listeners because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2857,5328,1,0,0,0,0,1,1,1,0,0,0,1,1,0,1,improve group coloring and item count the problem was that gettreetablerowgetitem in viewmodeltreetablecellfactory still returned the old item and not the new one passed as method argument to updateitem since i was already looking at the code this pr also fixes that improves the coloring after an entry was added to the group also fixes at least i couldnt replicate it anymore because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
2902,5352,1,0,0,0,0,0,1,0,0,0,0,1,1,0,1,bring back the context menu as explained in it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround and refs i removed the custom tab handling because it is now working as expected ie is fixed in java + because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5022,5354,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,fix group color when scrolling problem was that the pseudo class was not initialized correctly but was only triggered upon changes because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5084,5432,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,fix cursor jump the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are fixed now because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues when you create a new entry the focus should be in the first field does this still hold true siedlerchr thats a good suggestion but does not even work in the current master something for another pr maybe
5035,5454,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,fix highlight issues for lists and fixes the problem was in both cases that the list view reuses nodes when scrolling instead of creating new ones because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5277,5454,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,fix highlight issues for lists and fixes the problem was in both cases that the list view reuses nodes when scrolling instead of creating new ones because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
5069,5472,1,0,0,1,0,0,1,0,0,0,0,0,1,0,1,fix highlight problem in entry preview by using markjs because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4949,5501,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,new ads fetcher i added a new fetcher that uses the new ads api some open question for implementation which ids should be viable ids for idbasedfetchers only doi only ads bibcode the current old version can handle both but im not sure if this is intentional we need an api key to access the api i have one for development but someone has to create one for the project we need to set a limit on how much search results are shown is a good valuerefs change in changelogmd described cleanups tasks change comments and documentation manually tested changed features in running jabref add api key that looks already really good nice job if it is relatively easy to implement then doi + bibcode support would be nice i will request an official key entries sounds indeed gooddo you have any questions codewise at the moment or anything else where we can help if it is relatively easy to implement then doi + bibcode support would be nicethat is no problem i already have implemented this do you have any questions codewise at the moment or anything else where we can helpat the moment i dont have any questions but i would like to get as much feedback as possible right now i have implemented the fetcher in a new class should we keep the old one and remove it later you can delete replace the old fetcher there is no point in having two fetcher for the same online service great thanks any plans chances that the new fetcher will be back ported to the latest stable release
5449,5519,1,0,0,1,0,1,1,0,0,0,1,1,1,0,1,fix xmp null error was caused by wrapping a set of fields in a treeset without specifying the comparator because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues
4430,5539,1,0,0,1,1,0,1,0,0,0,1,1,1,0,1,improve performance improve performance by caching fields as keywordlist remove duplicate change listener remove preference access in loopwith these changes the mega huge library of aegit works without too much delays the initial loading of the database is a bit slow but still ok thus this pr is a potential fix for and for describe the changes you have made here because github does not support autolinking there change in changelogmd described manually tested changed features in running jabref helpjabreforg https githubcom jabref helpjabreforg issues tobiasdiez wonderful let me know when i can start testing this fix
5661,5670,1,0,0,1,0,0,1,0,0,0,1,1,1,0,1,improve column preference migration title of the pr must not reference an issue because github does not support autolinking there change in changelogmd described if applicable
5679,5680,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,add throttle to autosaveuimanager as discussed in there are a lot of save actions performed when autosave is turned on this pr adds a timer which limits the save actions to one in ms which is especially handy when automated tasks like find and replace are performed change in changelogmd described if applicable when working on this the comments on should be checked ðÿ˜‡ i found the scheduledservice from javafx mabye this is an option as well koppor by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progressthis leads me to another question lets say an auto save action is happening and during the save process the user presses ctrl s what happensas i can see there are two savedatabaseaction created one in the basepanel and one in the autosavemanager no locking is happening so basically the later manual saved version could be overwritten by the older autosave one siedlerchr i think this is more for recurring tasks rather to simply defer a task as it says that it will go from scheduled running finished scheduled automatically actually siedlerchr you were right there is a scheduledthreadpoolexecutor i now completely changed the way to tackle the problem autosavemanager had a normal executorservice there was actually a bug when saving took longer executorservice would through an exception as the pool size was only of the size one under certain circumstances newer information might not get auto saved thereforethe current implementation replaces the executorservice by an scheduledexecutorservice additionally the bug of can now be reproduced when autosave is enabled change something and quickly press ctrl s you will see the error so we should make the savedatabaseaction thread safe to prevent the error koppor what do you think ah cool that sounds good thread safe sounds fittingthere are different ways to achieve this and maybe one of those newer locking things is helping ka o do you use eclipse or intellij with intellij and the complete setup from the autoformat takes care by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progress this leads me to another question lets say an auto save action is happening and during the save process the user presses ctrl s what happens unsure whether this is still the question either cancel the current autosave or let it go and then trigger it again i would prefer the former as long as we write to sav and then move to bib thus we do not destroy the bib file of the user koppor actually i have important that already but i forgot to do auto formatting before committing ive now created a pre commit hook which runs checkstyle so that this doesnt happens again thanks again